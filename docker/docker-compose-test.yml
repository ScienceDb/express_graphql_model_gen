version: "3.2"

services:
  gql_postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    ports:
     - 1234:5432

  gql_science_db_graphql_server:
    depends_on:
      - gql_postgres
    build:
      context: .
      dockerfile: Dockerfile.graphql_server

    volumes:
      - ./integration_test_run/schemas:/usr/src/app/schemas
      - ./integration_test_run/resolvers:/usr/src/app/resolvers
      - ./integration_test_run/models:/usr/src/app/models
      - ./integration_test_run/models-distributed:/usr/src/app/models-distributed
      - ./integration_test_run/models-webservice:/usr/src/app/models-webservice
      - ./integration_test_run/models-cenz-server:/usr/src/app/models-cenz-server
      - ./integration_test_run/migrations:/usr/src/app/migrations
      - ./integration_test_run/validations:/usr/src/app/validations
      - ./integration_test_run/patches:/usr/src/app/patches
      - ./sequelize_config.json:/usr/src/app/config/config.json

    ports:
      - "3000:3000"

    environment:
      PORT: 3000
      REQUIRE_SIGN_IN: "false"
    # Await POSTGRES role and DB creation, migrate schema, then start web server:
    command:
      - /bin/sh
      - -c
      - |
        npm install
        ./migrateDbAndStartServer.sh

  gql_ncbi_sim_srv:
    depends_on:
      - gql_postgres
      - gql_science_db_graphql_server
    build:
      context: .
      dockerfile: Dockerfile.ncbi_sim_srv

    volumes:
      - ./ncbi_sim_srv:/usr/src/app

    ports:
      - "3344:3344"
    environment:
        PORT: 3344
        BASE_URL: /aminoAcidSequence

    command:
      - /bin/sh
      - -c
      - |
        npm install
        npm start
