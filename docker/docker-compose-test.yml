version: "3.7"

services:
  gql_postgres1:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    ports:
     - 1234:5432
    networks:
     - instance1

  gql_cassandra1:
    container_name: cassandra1
    build:
      context: .
      dockerfile: Dockerfile.cassandra
    volumes: 
      - ./cassandra1.yaml:/etc/cassandra/cassandra.yaml
      - ./cqlshrc.1:/a.cqlshrc
      - ./docker-entrypoint.sh.cassandra:/docker-entrypoint.sh
      - ./cassandra-keyspace.cql:/docker-entrypoint-initdb.d/cassandra-keyspace.cql
    ports: 
      - 9041:9041
      - 7050:7050
      - 7051:7051
      - 7197:7199
      - 9161:9161
    environment: 
      - MAX_HEAP_SIZE=256M
      - HEAP_NEWSIZE=128M
      - CPORT=9041
    networks: 
      - instance1

  gql_science_db_graphql_server1:
    container_name: server1
    depends_on:
      - gql_postgres1
      - gql_cassandra1
    build:
      context: .
      dockerfile: Dockerfile.graphql_server

    volumes:
      - ./integration_test_run/instance1/adapters:/usr/src/app/adapters
      - ./integration_test_run/instance1/schemas:/usr/src/app/schemas
      - ./integration_test_run/instance1/resolvers:/usr/src/app/resolvers
      - ./integration_test_run/instance1/models:/usr/src/app/models
      - ./integration_test_run/instance1/models-distributed:/usr/src/app/models-distributed
      - ./integration_test_run/instance1/models-webservice:/usr/src/app/models-webservice
      - ./integration_test_run/instance1/models-cenz-server:/usr/src/app/models-cenz-server
      - ./integration_test_run/instance1/models-generic:/usr/src/app/models-generic
      - ./integration_test_run/instance1/models-cassandra:/usr/src/app/models-cassandra
      - ./integration_test_run/instance1/migrations:/usr/src/app/migrations
      - ./integration_test_run/instance1/migrations-cassandra:/usr/src/app/migrations-cassandra
      - ./integration_test_run/instance1/validations:/usr/src/app/validations
      - ./integration_test_run/instance1/patches:/usr/src/app/patches
      - ./sequelize_config_instance1.json:/usr/src/app/config/config.json
      - /home/thomas/ScienceDbStarterPack/graphql-server/utils/setup_cassandra_db.js:/usr/src/app/utils/setup_cassandra_db.js

    ports:
      - "3000:3000"

    environment:
      PORT: 3000
      REQUIRE_SIGN_IN: "false"
      LIMIT_RECORDS: 25
      CASSANDRA_HOST: "cassandra1"
      CASSANDRA_PORT: 9041
    # Await POSTGRES role and DB creation, migrate schema, then start web server:
    networks:
      - integrationtest
      - instance1

    command:
      - /bin/sh
      - -c
      - |
        npm install
        ./migrateDbAndStartServer.sh

  gql_ncbi_sim_srv1:
    container_name: gql_ncbi_sim_srv
    depends_on:
      - gql_postgres1
      - gql_science_db_graphql_server1
    build:
      context: .
      dockerfile: Dockerfile.ncbi_sim_srv

    volumes:
      - ./ncbi_sim_srv:/usr/src/app

    ports:
      - "3344:3344"
    environment:
        PORT: 3344
        BASE_URL: /aminoAcidSequence

    networks:
      - instance1

    command:
      - /bin/sh
      - -c
      - |
        npm install
        npm start

  gql_postgres2:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    ports:
     - 1235:5431
    networks:
      - instance2

  gql_cassandra2:
    container_name: cassandra2
    build:
      context: .
      dockerfile: Dockerfile.cassandra
    volumes: 
      - ./cassandra2.yaml:/etc/cassandra/cassandra.yaml
      - ./cqlshrc.2:/a.cqlshrc
      - ./docker-entrypoint.sh.cassandra:/docker-entrypoint.sh
      - ./cassandra-keyspace.cql:/docker-entrypoint-initdb.d/cassandra-keyspace.cql
    ports: 
      - 9043:9043
      - 7060:7060
      - 7061:7061
      - 7198:7199
      - 9162:9162
    environment: 
      - MAX_HEAP_SIZE=256M
      - HEAP_NEWSIZE=128M
      - CPORT=9043
    networks:
      - instance2

  gql_science_db_graphql_server2:
    container_name: server2
    depends_on:
      - gql_postgres2
      - gql_cassandra2
    build:
      context: .
      dockerfile: Dockerfile.graphql_server

    volumes:
      - ./integration_test_run/instance2/adapters:/usr/src/app/adapters
      - ./integration_test_run/instance2/schemas:/usr/src/app/schemas
      - ./integration_test_run/instance2/resolvers:/usr/src/app/resolvers
      - ./integration_test_run/instance2/models:/usr/src/app/models
      - ./integration_test_run/instance2/models-distributed:/usr/src/app/models-distributed
      - ./integration_test_run/instance2/models-webservice:/usr/src/app/models-webservice
      - ./integration_test_run/instance2/models-cenz-server:/usr/src/app/models-cenz-server
      - ./integration_test_run/instance2/models-generic:/usr/src/app/models-generic
      - ./integration_test_run/instance2/models-cassandra:/usr/src/app/models-cassandra
      - ./integration_test_run/instance2/migrations:/usr/src/app/migrations
      - ./integration_test_run/instance2/migrations-cassandra:/usr/src/app/migrations-cassandra
      - ./integration_test_run/instance2/validations:/usr/src/app/validations
      - ./integration_test_run/instance2/patches:/usr/src/app/patches
      - ./sequelize_config_instance2.json:/usr/src/app/config/config.json
      - /home/thomas/ScienceDbStarterPack/graphql-server/utils/setup_cassandra_db.js:/usr/src/app/utils/setup_cassandra_db.js

    ports:
      - "3030:3030"

    environment:
      PORT: 3030
      REQUIRE_SIGN_IN: "false"
      LIMIT_RECORDS: 25
      CASSANDRA_HOST: "cassandra2"
      CASSANDRA_PORT: 9043
    # Await POSTGRES role and DB creation, migrate schema, then start web server:
    networks:
      - integrationtest
      - instance2
    command:
      - /bin/sh
      - -c
      - |
        npm install
        ./migrateDbAndStartServer.sh

networks:
  instance1:
  instance2:
  integrationtest:
