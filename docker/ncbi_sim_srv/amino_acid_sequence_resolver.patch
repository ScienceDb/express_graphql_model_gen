--- ./resolvers/aminoacidsequence.js    2019-08-19 22:32:05.239131591 +0000
+++ ./resolvers/aminoacidsequence.js    2019-08-19 22:33:53.879534759 +0000
@@ -1,6 +1,8 @@
 const aminoacidsequence = require('../models-webservice/aminoacidsequence');
 const searchArg = require('../utils/search-argument');
 const resolvers = require('./index');
+const request = require('sync-request');
+const baseUrl = 'http://gql_ncbi_sim_srv:3344/aminoAcidSequence/';



@@ -113,10 +115,24 @@
         order,
         pagination
     }, context) {
-        /*
-        YOUR CODE GOES HERE
-        */
-        throw new Error('aminoacidsequences is not implemented');
+        let ids = [69905, 10644, 63165];
+        let unfiltered = [];
+
+        let cnt = 0;
+        for(idx in ids){
+            if(idx >= pagination.offset) {
+                console.log(ids[idx]);
+                let res = request('get', baseUrl + ids[idx]);
+                if (res.statusCode !== 200) throw new Error(`Remote service response status code for ${ids[idx]}: ${res.statusCode}`);
+                unfiltered.push(new aminoacidsequence(JSON.parse(res.body.toString('utf8'))));
+
+                cnt++;
+                if(cnt === pagination.limit)
+                    break;
+            }
+        }
+
+        return unfiltered;
     },

     /**
@@ -129,10 +145,9 @@
     readOneAminoacidsequence: function({
         id
     }, context) {
-        /*
-        YOUR CODE GOES HERE
-        */
-        throw new Error('readOneAminoacidsequence is not implemented');
+        let res = request('get', baseUrl + id);
+        if(res.statusCode !== 200) throw new Error(`Remote service response status code for ${id}: ${res.statusCode}`);
+        return new aminoacidsequence(JSON.parse(res.body.toString('utf8')));
     },

     /**
