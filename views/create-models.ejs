'use strict';

const Sequelize = require('sequelize');

/**
 * module - Creates a sequelize model
 *
 * @param  {object} sequelize Sequelize instance.
 * @param  {object} DataTypes Allowed sequelize data types.
 * @return {object}           Sequelize model with associations defined
 */ 
module.exports = function(sequelize, DataTypes){
  var <%- name -%> = sequelize.define('<%- nameLc -%>',{

    <% let keys = Object.keys(attributes) -%>
    <%for (let i=0; i< keys.length; i++) {-%>
      <% let type_seq =  attributes[ keys[i] ] -%>
      <% if(type_seq === 'Int'){ type_seq = 'INTEGER' } -%>
      <%=  keys[i] %>: {
          type: Sequelize.<%= type_seq.toUpperCase() %>
      }
      <%if(i !== (keys.length -1) ){ -%>,<%}-%>
    <%}-%>
    <%if(associations.explicit_resolvers.belongsTo.length > 0) {-%>
      <%if( keys.length > 0){%>,<%}-%>
      <% for(let i=0; i < associations.explicit_resolvers.belongsTo.length; i++){-%>
        <%=associations.explicit_resolvers.belongsTo[i].targetKey%>: {
          type: Sequelize.INTEGER
        }
        <%if(i !== (associations.explicit_resolvers.belongsTo.length -1) ){ -%>,<%}-%>
      <%}-%>
    <%}-%>
  });

  <%- name -%>.associate = function(models){
      <% for(var key in associations.implicit_associations){ -%>
        <%for(let i=0; i< associations.implicit_associations[key].length; i++){-%>
          <%- name -%>.<%= key %>(models.<%= associations.implicit_associations[key][i].target.toLowerCase() -%>
          <% if(key === 'belongsToMany'){ -%> ,{through : '<%= associations.implicit_associations[key][i].keysIn -%>',
          onDelete: 'CASCADE'}  <%}else{ -%>
            ,{foreignKey:'<%= associations.implicit_associations[key][i].targetKey -%>' }
            <%}-%>);
        <%}-%>
      <% } -%>
  };

  return <%- name -%>;
};
