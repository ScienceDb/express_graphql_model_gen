
module.exports = `
  type <%- name -%>
  {
  <% for (var key in attributes){-%>
    <%= key %>: <%= attributes[key]%>
  <%}-%>
  <%for(var key in associations.schema_attributes.one){-%>
    <%= key %>: <%= associations.schema_attributes.one[key]%>
  <%}-%>
  <%for(var key in associations.schema_attributes.many){-%>
    <%= key%>Filter(input: search<%= associations.schema_attributes.many[key] -%>Input, order: [ order<%= associations.schema_attributes.many[key] -%>Input ], pagination: paginationInput): [<%= associations.schema_attributes.many[key]%>]
  <%}-%>
}

  enum <%- name -%>Field {
    id <%for (var key in attributes) {%>
    <%= key -%>
  <% }%>
  }

  input search<%- name -%>Input {
    field: <%- name -%>Field
    value: typeValue
    operator: Operator
    searchArg: [search<%- name -%>Input]
  }

  input order<%- name -%>Input{
    field: <%- name -%>Field
    order: Order
  }

  type Query {
    <%- namePl -%>(input: search<%- name -%>Input, order: [ order<%- name -%>Input ], pagination: paginationInput ): [<%- name -%>]
    readOne<%- nameCp -%>(id: ID!): <%- name %>
  }

  <% if(storageType === 'sql'){-%>
  type Mutation {
    add<%- nameCp -%>( <%- attributesStr -%><% if (associations.mutations_attributes !==""){-%>, <%= associations.mutations_attributes %>  <%}-%> ): <%- name %>
    delete<%- nameCp -%>(id: ID!): String!
    update<%- nameCp -%>(id: ID!, <%- attributesStr -%><% if (associations.mutations_attributes !==""){-%>, <%= associations.mutations_attributes %>  <%}-%>): <%- name %>!
    bulkAdd<%- nameCp -%>Xlsx: [<%- name -%>]
    bulkAdd<%- nameCp -%>Csv: [<%- name -%>]
}
  <%}-%>
`;
