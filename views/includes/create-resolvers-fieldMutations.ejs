
<%# creates the field Mutations for adding/removing associated records %> 

<%for(let i=0; i < associationsArguments["to_many"].length; i++){-%>
  /**
  * <%- op %><%-associationsArguments["to_many"][i].name_cp-%> - field Mutation for to_many associations to <%- op %> 
  *
  * @param {object} input   Info of input Ids to <%- op %>  the association
  */
  <%- nameLc -%>.prototype.<%- op %><%-associationsArguments["to_many"][i].name_cp-%> = async function(input) {
    let results = [];
    input.<%- op %><%-associationsArguments["to_many"][i].name_cp-%>.forEach(associatedRecordId => {
      results.push(models.<%-associationsArguments["to_many"][i].target_lc-%>._<%- op %><%- nameCp -%> (associatedRecordId, input.<%- idAttribute %>));
    })
    await Promise.all(results);
  }
  
<%}-%>

<%for(let i=0; i < associationsArguments["to_one"].length; i++){-%>
  /**
  * <%- op %><%-associationsArguments["to_one"][i].name_cp-%> - field Mutation for to_one associations to <%- op %> 
  *
  * @param {object} input   Info of input Ids to <%- op %>  the association
  */
  <%- nameLc -%>.prototype.<%- op %><%-associationsArguments["to_one"][i].name_cp-%> = async function(input) {
    await <%- nameLc -%>._<%- op %><%-associationsArguments["to_one"][i].name_cp-%>(input.<%- idAttribute %> %>, input.<%- op %><%-associationsArguments["to_one"][i].name_cp-%>);
    this.<%-associationsArguments["to_one"][i].targetKey-%> = input.<%- op %><%-associationsArguments["to_one"][i].name_cp-%>;
  }
<%}-%>